name: Playwright Tests

# Trigger the workflow on push to main/master branch and on pull requests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  test:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10']
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      # Step 3: Cache pip dependencies for faster builds
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      # Step 4: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install Playwright first
          pip install playwright
          # Install additional requirements if requirements.txt exists
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          
      # Step 5: Install Playwright browsers and dependencies
      - name: Install Playwright browsers and dependencies
        run: |
          playwright install --with-deps chromium
          
      # Step 6: Run Playwright test script
      - name: Run Playwright test script
        run: |
          cd tests
          python test_site.py
          
      # Step 7: Upload test artifacts (optional - for debugging)
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            tests/
            screenshots/
          retention-days: 7
          
  # Optional: Add a notification job
  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Test Status Notification
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ Playwright tests passed successfully!"
          else
            echo "❌ Playwright tests failed. Please check the logs."
            exit 1
          fi